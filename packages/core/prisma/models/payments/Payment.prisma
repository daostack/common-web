model Payment {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  processed      Boolean @default(false)
  processedError Boolean @default(false)

  type   PaymentType
  status PaymentStatus @default(NotAttempted)

  circlePaymentStatus PaymentCircleStatus?
  circlePaymentId     String?

  amount Int
  fees Int?

  card Card @relation(fields: [cardId], references: [id])

  user   User    @relation(fields: [userId], references: [id])
  common Common @relation(fields: [commonId], references: [id])

  join         JoinProposal  @relation(fields: [joinId], references: [id])
  subscription Subscription? @relation(fields: [subscriptionId], references: [id])

  subscriptionId String?
  joinId         String

  userId   String
  commonId String

  cardId String
}
