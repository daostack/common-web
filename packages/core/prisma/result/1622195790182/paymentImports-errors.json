[
  {
    "reason": "No user ID",
    "payment": {
      "subscriptionId": "ec051bc0-0adc-4983-89da-bb411dfc2289",
      "refunds": [],
      "id": "a8c567a2-3819-44d1-b636-96df60e66cbe",
      "updateDate": "2020-12-09T20:12:33.369Z",
      "type": "SubscriptionPayment",
      "status": "pending",
      "amount": {
        "currency": "USD",
        "amount": "12500.00"
      },
      "createDate": "2020-12-09T20:12:33.369Z",
      "source": {
        "id": "daa181fc-5581-4d2a-bd0a-0b49894310ea",
        "type": "card"
      }
    }
  },
  {
    "reason": "No user ID",
    "payment": {
      "status": "pending",
      "id": "e9997bb7-0d3e-443b-8cc4-047dd2e8b3bc",
      "refunds": [],
      "type": "SubscriptionPayment",
      "updateDate": "2020-12-10T07:55:55.881Z",
      "source": {
        "type": "card",
        "id": "03ec81b7-d29e-410c-a0d6-ce516a9a4cc7"
      },
      "createDate": "2020-12-10T07:55:55.881Z",
      "amount": {
        "amount": "50000.00",
        "currency": "USD"
      },
      "subscriptionId": "3c2dd6b4-8ea0-4ec1-b3c0-8c8a67cfd32f"
    }
  },
  {
    "reason": "No user ID",
    "payment": {
      "status": "pending",
      "subscriptionId": "f498688c-1835-466b-a7e2-3c2a0e8a595e",
      "id": "f9f767e7-4516-49bc-8257-32c6c2af42b6",
      "amount": {
        "currency": "USD",
        "amount": "50000.00"
      },
      "updateDate": "2020-12-10T07:55:55.850Z",
      "createDate": "2020-12-10T07:55:55.850Z",
      "type": "SubscriptionPayment",
      "source": {
        "type": "card",
        "id": "03ec81b7-d29e-410c-a0d6-ce516a9a4cc7"
      },
      "refunds": []
    }
  },
  {
    "payment": {
      "userId": "97d5y9WXk1fEZv767j1ejKuHevi1",
      "proposalId": "Payment for deleted subscription",
      "type": "subscription",
      "subscriptionId": "Payment for deleted subscription",
      "createdAt": {
        "_seconds": 1607860234,
        "_nanoseconds": 269000000
      },
      "amount": {
        "currency": "USD",
        "amount": 125000
      },
      "updatedAt": {
        "_seconds": 1609942812,
        "_nanoseconds": 460000000
      },
      "circlePaymentId": "eee09267-5668-4b8d-a90b-0d14e78bb9a6",
      "fees": {
        "currency": "USD",
        "amount": 5343
      },
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "id": "1dc10aad-b62e-4593-8d4d-a7314c82bc45",
      "source": {
        "id": "290e2649-8ae7-4e66-b4ba-044817358361",
        "type": "card"
      },
      "status": "paid"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '1dc10aad-b62e-4593-8d4d-a7314c82bc45',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 125000,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: 'eee09267-5668-4b8d-a90b-0d14e78bb9a6',\n    user: {\n      connect: {\n        id: '97d5y9WXk1fEZv767j1ejKuHevi1'\n      }\n    },\n    card: {\n      connect: {\n        id: '290e2649-8ae7-4e66-b4ba-044817358361'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '1dc10aad-b62e-4593-8d4d-a7314c82bc45',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 125000,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: 'eee09267-5668-4b8d-a90b-0d14e78bb9a6',\n    user: {\n      connect: {\n        id: '97d5y9WXk1fEZv767j1ejKuHevi1'\n      }\n    },\n    card: {\n      connect: {\n        id: '290e2649-8ae7-4e66-b4ba-044817358361'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "type": "one-time",
      "id": "1e4deece-422f-4e8c-8c6f-d7a92d814358",
      "circlePaymentId": "c639397a-949b-4c3a-8f71-5fba2e01b078",
      "proposalId": "7954d1ca-70e1-4f5e-9819-979264b6a310",
      "amount": {
        "amount": 500,
        "currency": "USD"
      },
      "fees": {
        "currency": "USD",
        "amount": 51
      },
      "source": {
        "type": "card",
        "id": "fc0112f9-653f-42c4-83af-3b4caff2ed86"
      },
      "status": "paid",
      "createdAt": {
        "_seconds": 1609423644,
        "_nanoseconds": 690000000
      },
      "updatedAt": {
        "_seconds": 1609942813,
        "_nanoseconds": 94000000
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '1e4deece-422f-4e8c-8c6f-d7a92d814358',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 500,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: 'c639397a-949b-4c3a-8f71-5fba2e01b078',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'fc0112f9-653f-42c4-83af-3b4caff2ed86'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '1e4deece-422f-4e8c-8c6f-d7a92d814358',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 500,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: 'c639397a-949b-4c3a-8f71-5fba2e01b078',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'fc0112f9-653f-42c4-83af-3b4caff2ed86'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "source": {
        "type": "card",
        "id": "93eb4c4d-9652-4a85-b951-79590276c3f2"
      },
      "userId": "Xlun3Ux94Zfc73axkiuVdkktOWf1",
      "status": "confirmed",
      "fees": {
        "amount": 51,
        "currency": "USD"
      },
      "createdAt": {
        "_seconds": 1614692355,
        "_nanoseconds": 136000000
      },
      "id": "2c9313de-d933-4571-ae1b-6a694d2a5e76",
      "circlePaymentId": "632214b7-9367-4a7d-8931-853bad17270a",
      "updatedAt": {
        "_seconds": 1614692356,
        "_nanoseconds": 56000000
      },
      "type": "one-time",
      "proposalId": "638206be-e759-41d2-a5a6-2de3c955112d",
      "amount": {
        "amount": 500,
        "currency": "USD"
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '2c9313de-d933-4571-ae1b-6a694d2a5e76',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 500,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '632214b7-9367-4a7d-8931-853bad17270a',\n    user: {\n      connect: {\n        id: 'Xlun3Ux94Zfc73axkiuVdkktOWf1'\n      }\n    },\n    card: {\n      connect: {\n        id: '93eb4c4d-9652-4a85-b951-79590276c3f2'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '2c9313de-d933-4571-ae1b-6a694d2a5e76',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 500,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '632214b7-9367-4a7d-8931-853bad17270a',\n    user: {\n      connect: {\n        id: 'Xlun3Ux94Zfc73axkiuVdkktOWf1'\n      }\n    },\n    card: {\n      connect: {\n        id: '93eb4c4d-9652-4a85-b951-79590276c3f2'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "createdAt": {
        "_seconds": 1611839484,
        "_nanoseconds": 981000000
      },
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "status": "confirmed",
      "fees": {
        "currency": "USD",
        "amount": 0
      },
      "circlePaymentId": "4897b725-0c48-488a-bc12-550f37af2582",
      "amount": {
        "currency": "USD",
        "amount": 30000
      },
      "id": "43d1aeb1-24e5-4f38-b888-ba4fc67d2f6e",
      "type": "subscription",
      "subscriptionId": "5731b2ca-3704-4da3-b796-352943b39656",
      "source": {
        "type": "card",
        "id": "2723c4ad-8f5f-4e08-923a-adc26bad8ad5"
      },
      "updatedAt": {
        "_seconds": 1611839485,
        "_nanoseconds": 381000000
      },
      "proposalId": "1e24babc-b09d-4a76-a71f-d99d0b6a61d8"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '43d1aeb1-24e5-4f38-b888-ba4fc67d2f6e',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 30000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '4897b725-0c48-488a-bc12-550f37af2582',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '2723c4ad-8f5f-4e08-923a-adc26bad8ad5'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '43d1aeb1-24e5-4f38-b888-ba4fc67d2f6e',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 30000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '4897b725-0c48-488a-bc12-550f37af2582',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '2723c4ad-8f5f-4e08-923a-adc26bad8ad5'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "updatedAt": {
        "_seconds": 1609942812,
        "_nanoseconds": 565000000
      },
      "createdAt": {
        "_seconds": 1609066371,
        "_nanoseconds": 943000000
      },
      "circlePaymentId": "ec4c2283-d4c0-4dfa-8439-342a881c2a6c",
      "amount": {
        "amount": 505.99999999999994,
        "currency": "USD"
      },
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "userId": "2Ti3LkP23KUJVp2AZY3wVHYWRxm2",
      "type": "one-time",
      "id": "49e85e26-fb51-47b1-922d-2a0999ab7829",
      "source": {
        "id": "dd6a5275-3d66-4e43-8e24-21b928fbb5f4",
        "type": "card"
      },
      "proposalId": "05aa208a-f249-4a18-b6c3-bed8d7b7c177",
      "status": "paid",
      "fees": {
        "currency": "USD",
        "amount": 52
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '49e85e26-fb51-47b1-922d-2a0999ab7829',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 506,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: 'ec4c2283-d4c0-4dfa-8439-342a881c2a6c',\n    user: {\n      connect: {\n        id: '2Ti3LkP23KUJVp2AZY3wVHYWRxm2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'dd6a5275-3d66-4e43-8e24-21b928fbb5f4'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '49e85e26-fb51-47b1-922d-2a0999ab7829',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 506,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: 'ec4c2283-d4c0-4dfa-8439-342a881c2a6c',\n    user: {\n      connect: {\n        id: '2Ti3LkP23KUJVp2AZY3wVHYWRxm2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'dd6a5275-3d66-4e43-8e24-21b928fbb5f4'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "amount": {
        "currency": "USD",
        "amount": 501
      },
      "updatedAt": {
        "_seconds": 1609942812,
        "_nanoseconds": 454000000
      },
      "subscriptionId": "Payment for deleted subscription",
      "status": "failed",
      "proposalId": "Payment for deleted subscription",
      "source": {
        "id": "2a888024-7c50-4324-a1f7-7b0b6ee47c18",
        "type": "card"
      },
      "createdAt": {
        "_seconds": 1607871075,
        "_nanoseconds": 447000000
      },
      "type": "subscription",
      "failure": {
        "errorCode": "payment_failed",
        "errorDescription": "Payment failed due to unspecified error"
      },
      "id": "5c91b494-6589-46b8-ab45-ab695c7db825",
      "userId": "2Ti3LkP23KUJVp2AZY3wVHYWRxm2",
      "circlePaymentId": "eb0eb46b-da58-4c24-af16-b52ceffdf78f"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '5c91b494-6589-46b8-ab45-ab695c7db825',\n    type: 'ImportedPayment',\n    status: 'Unsuccessful',\n    amount: 501,\n    circlePaymentStatus: 'failed',\n    circlePaymentId: 'eb0eb46b-da58-4c24-af16-b52ceffdf78f',\n    user: {\n      connect: {\n        id: '2Ti3LkP23KUJVp2AZY3wVHYWRxm2'\n      }\n    },\n    card: {\n      connect: {\n        id: '2a888024-7c50-4324-a1f7-7b0b6ee47c18'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '5c91b494-6589-46b8-ab45-ab695c7db825',\n    type: 'ImportedPayment',\n    status: 'Unsuccessful',\n    amount: 501,\n    circlePaymentStatus: 'failed',\n    circlePaymentId: 'eb0eb46b-da58-4c24-af16-b52ceffdf78f',\n    user: {\n      connect: {\n        id: '2Ti3LkP23KUJVp2AZY3wVHYWRxm2'\n      }\n    },\n    card: {\n      connect: {\n        id: '2a888024-7c50-4324-a1f7-7b0b6ee47c18'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "amount": {
        "amount": 700,
        "currency": "USD"
      },
      "createdAt": {
        "_seconds": 1612272304,
        "_nanoseconds": 409000000
      },
      "proposalId": "94ae8447-bb6a-4ef8-963a-ad59d29aa7e0",
      "userId": "skBkfQh8E1f4eOGBSVLaiuJ097v1",
      "status": "confirmed",
      "type": "one-time",
      "id": "5f6c2e61-ac2a-4ba7-9678-05d1d880501c",
      "circlePaymentId": "4b5e5e29-c370-40ee-adda-2c23151a5002",
      "updatedAt": {
        "_seconds": 1612272304,
        "_nanoseconds": 927000000
      },
      "source": {
        "id": "12a07ec9-f9aa-4715-bf67-b27564eab32a",
        "type": "card"
      },
      "fees": {
        "currency": "USD",
        "amount": 0
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '5f6c2e61-ac2a-4ba7-9678-05d1d880501c',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 700,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '4b5e5e29-c370-40ee-adda-2c23151a5002',\n    user: {\n      connect: {\n        id: 'skBkfQh8E1f4eOGBSVLaiuJ097v1'\n      }\n    },\n    card: {\n      connect: {\n        id: '12a07ec9-f9aa-4715-bf67-b27564eab32a'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '5f6c2e61-ac2a-4ba7-9678-05d1d880501c',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 700,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '4b5e5e29-c370-40ee-adda-2c23151a5002',\n    user: {\n      connect: {\n        id: 'skBkfQh8E1f4eOGBSVLaiuJ097v1'\n      }\n    },\n    card: {\n      connect: {\n        id: '12a07ec9-f9aa-4715-bf67-b27564eab32a'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "updatedAt": {
        "_seconds": 1609942813,
        "_nanoseconds": 449000000
      },
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "circlePaymentId": "15ebaca8-7e45-46d6-bf95-34c3a18219a0",
      "createdAt": {
        "_seconds": 1607860105,
        "_nanoseconds": 845000000
      },
      "subscriptionId": "Payment for deleted subscription",
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "amount": {
        "currency": "USD",
        "amount": 250000
      },
      "status": "paid",
      "proposalId": "Payment for deleted subscription",
      "fees": {
        "currency": "USD",
        "amount": 10655
      },
      "id": "62e89b21-f406-4a3b-9157-60494f22d92b",
      "source": {
        "id": "58545097-65aa-4510-9a4a-21bdd9b2802f",
        "type": "card"
      },
      "type": "subscription"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '62e89b21-f406-4a3b-9157-60494f22d92b',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 250000,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: '15ebaca8-7e45-46d6-bf95-34c3a18219a0',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '58545097-65aa-4510-9a4a-21bdd9b2802f'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '62e89b21-f406-4a3b-9157-60494f22d92b',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 250000,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: '15ebaca8-7e45-46d6-bf95-34c3a18219a0',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '58545097-65aa-4510-9a4a-21bdd9b2802f'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "updatedAt": {
        "_seconds": 1609942813,
        "_nanoseconds": 251000000
      },
      "status": "paid",
      "type": "one-time",
      "id": "65aba813-b00a-4156-9036-6bb65c9dfa48",
      "createdAt": {
        "_seconds": 1608456381,
        "_nanoseconds": 694000000
      },
      "amount": {
        "currency": "USD",
        "amount": 1250
      },
      "fees": {
        "currency": "USD",
        "amount": 83
      },
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "circlePaymentId": "dc1a04d0-cf63-46a1-ad6b-5594b99a8b69",
      "proposalId": "7cf90135-7b98-410c-a1a2-731cf42996e6",
      "source": {
        "type": "card",
        "id": "949b3114-f29f-4ae5-84bd-5fce9bb38888"
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '65aba813-b00a-4156-9036-6bb65c9dfa48',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 1250,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: 'dc1a04d0-cf63-46a1-ad6b-5594b99a8b69',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '949b3114-f29f-4ae5-84bd-5fce9bb38888'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '65aba813-b00a-4156-9036-6bb65c9dfa48',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 1250,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: 'dc1a04d0-cf63-46a1-ad6b-5594b99a8b69',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '949b3114-f29f-4ae5-84bd-5fce9bb38888'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "proposalId": "2fc72a59-5015-4cd3-a89a-d6ec30712cd9",
      "id": "747ea196-13a0-4d24-925e-ff13d16e8a3f",
      "updatedAt": {
        "_seconds": 1612858935,
        "_nanoseconds": 545000000
      },
      "status": "confirmed",
      "amount": {
        "amount": 30000,
        "currency": "USD"
      },
      "createdAt": {
        "_seconds": 1612858934,
        "_nanoseconds": 719000000
      },
      "circlePaymentId": "76472a62-0b3c-4a05-bb75-8496b14a4b35",
      "fees": {
        "currency": "USD",
        "amount": 1305
      },
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "subscriptionId": "60632fae-50b5-4845-a04a-a5be88dae60c",
      "source": {
        "type": "card",
        "id": "d83e3944-985e-46cb-85fa-2ac249a51ab0"
      },
      "type": "subscription"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '747ea196-13a0-4d24-925e-ff13d16e8a3f',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 30000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '76472a62-0b3c-4a05-bb75-8496b14a4b35',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'd83e3944-985e-46cb-85fa-2ac249a51ab0'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '747ea196-13a0-4d24-925e-ff13d16e8a3f',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 30000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '76472a62-0b3c-4a05-bb75-8496b14a4b35',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'd83e3944-985e-46cb-85fa-2ac249a51ab0'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "source": {
        "type": "card",
        "id": "f1180d0a-f5c5-4ba1-b021-228e7481f42b"
      },
      "fees": {
        "currency": "USD",
        "amount": 83
      },
      "status": "paid",
      "type": "subscription",
      "createdAt": {
        "_seconds": 1609423983,
        "_nanoseconds": 268000000
      },
      "updatedAt": {
        "_seconds": 1609942813,
        "_nanoseconds": 355000000
      },
      "id": "7d24b7bf-2ec8-4c05-96dc-ffae32e0e5ed",
      "subscriptionId": "c3710950-1ba7-4b07-8de1-6e4f15002043",
      "circlePaymentId": "8b4736d5-5151-4013-8400-a1018f9461f5",
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "amount": {
        "currency": "USD",
        "amount": 1250
      },
      "proposalId": "232a7fb7-c16c-46a1-a5db-d48698cef2a7"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '7d24b7bf-2ec8-4c05-96dc-ffae32e0e5ed',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 1250,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: '8b4736d5-5151-4013-8400-a1018f9461f5',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'f1180d0a-f5c5-4ba1-b021-228e7481f42b'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '7d24b7bf-2ec8-4c05-96dc-ffae32e0e5ed',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 1250,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: '8b4736d5-5151-4013-8400-a1018f9461f5',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'f1180d0a-f5c5-4ba1-b021-228e7481f42b'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "updatedAt": {
        "_seconds": 1610269614,
        "_nanoseconds": 323000000
      },
      "type": "subscription",
      "status": "confirmed",
      "source": {
        "type": "card",
        "id": "a37a64f1-e7be-4a71-90d7-59936423b864"
      },
      "subscriptionId": "e3cbb228-efc6-4622-9c17-07f8999a3dc5",
      "fees": {
        "amount": 0,
        "currency": "USD"
      },
      "id": "8b1813ba-01a2-477c-8922-bc34e8e968ca",
      "circlePaymentId": "e6f348ef-effc-480a-94ea-c9ae42dab6a8",
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "amount": {
        "amount": 200000,
        "currency": "USD"
      },
      "createdAt": {
        "_seconds": 1610269613,
        "_nanoseconds": 809000000
      },
      "proposalId": "2ae71d1e-1006-4160-a313-b76dbebd07bd"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '8b1813ba-01a2-477c-8922-bc34e8e968ca',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 200000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: 'e6f348ef-effc-480a-94ea-c9ae42dab6a8',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'a37a64f1-e7be-4a71-90d7-59936423b864'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '8b1813ba-01a2-477c-8922-bc34e8e968ca',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 200000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: 'e6f348ef-effc-480a-94ea-c9ae42dab6a8',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'a37a64f1-e7be-4a71-90d7-59936423b864'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "circlePaymentId": "7e942628-d3dc-4d85-9499-15f47e85e67f",
      "proposalId": "3b006f72-5ba3-4ff6-b429-7384af40bc65",
      "createdAt": {
        "_seconds": 1617233105,
        "_nanoseconds": 882000000
      },
      "commonId": "15c15871-d513-4a06-9e24-7d2c92cbd571",
      "updatedAt": {
        "_seconds": 1617233106,
        "_nanoseconds": 531000000
      },
      "amount": {
        "currency": "USD",
        "amount": 700
      },
      "status": "confirmed",
      "source": {
        "id": "8a9fef18-f80e-4883-8c39-db3cd1dc9e90",
        "type": "card"
      },
      "userId": "RoUaatJIeccpYxcDD7v1fqJrHZx2",
      "type": "one-time",
      "fees": {
        "amount": 60,
        "currency": "USD"
      },
      "id": "91985cf3-7fea-4dae-85e6-49244f6f69df"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '91985cf3-7fea-4dae-85e6-49244f6f69df',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 700,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '7e942628-d3dc-4d85-9499-15f47e85e67f',\n    user: {\n      connect: {\n        id: 'RoUaatJIeccpYxcDD7v1fqJrHZx2'\n      }\n    },\n    card: {\n      connect: {\n        id: '8a9fef18-f80e-4883-8c39-db3cd1dc9e90'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '91985cf3-7fea-4dae-85e6-49244f6f69df',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 700,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '7e942628-d3dc-4d85-9499-15f47e85e67f',\n    user: {\n      connect: {\n        id: 'RoUaatJIeccpYxcDD7v1fqJrHZx2'\n      }\n    },\n    card: {\n      connect: {\n        id: '8a9fef18-f80e-4883-8c39-db3cd1dc9e90'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "amount": {
        "currency": "USD",
        "amount": 1500
      },
      "createdAt": {
        "_seconds": 1618371006,
        "_nanoseconds": 195000000
      },
      "commonId": "162374ec-7e92-47fa-b0a5-21f342fbc023",
      "circlePaymentId": "3889e8e7-1f56-413e-824d-2c93d43b1d2a",
      "type": "one-time",
      "id": "984f5989-2eff-40e3-ac1a-7f14e630147c",
      "fees": {
        "amount": 94,
        "currency": "USD"
      },
      "userId": "RoUaatJIeccpYxcDD7v1fqJrHZx2",
      "proposalId": "77995a37-ff4b-4438-ac79-822a37f4fc8b",
      "status": "confirmed",
      "source": {
        "type": "card",
        "id": "5faed414-e41f-4f4d-b5b3-143b8fb8a983"
      },
      "updatedAt": {
        "_seconds": 1618371006,
        "_nanoseconds": 873999000
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '984f5989-2eff-40e3-ac1a-7f14e630147c',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 1500,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '3889e8e7-1f56-413e-824d-2c93d43b1d2a',\n    user: {\n      connect: {\n        id: 'RoUaatJIeccpYxcDD7v1fqJrHZx2'\n      }\n    },\n    card: {\n      connect: {\n        id: '5faed414-e41f-4f4d-b5b3-143b8fb8a983'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '984f5989-2eff-40e3-ac1a-7f14e630147c',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 1500,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '3889e8e7-1f56-413e-824d-2c93d43b1d2a',\n    user: {\n      connect: {\n        id: 'RoUaatJIeccpYxcDD7v1fqJrHZx2'\n      }\n    },\n    card: {\n      connect: {\n        id: '5faed414-e41f-4f4d-b5b3-143b8fb8a983'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "status": "failed",
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "proposalId": "5800be22-1ad6-4aa5-ad7d-eaf60faeee49",
      "failure": {
        "errorDescription": "Payment failed due to unspecified error",
        "errorCode": "payment_failed"
      },
      "type": "one-time",
      "amount": {
        "currency": "USD",
        "amount": 501
      },
      "id": "9d606897-2874-4c47-82cb-07debf1941da",
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "updatedAt": {
        "_seconds": 1609942812,
        "_nanoseconds": 562000000
      },
      "circlePaymentId": "5dae3db7-2902-4608-a32b-782b905148c7",
      "source": {
        "id": "97d16bcf-df1b-4814-865b-041be22e4d18",
        "type": "card"
      },
      "createdAt": {
        "_seconds": 1608132307,
        "_nanoseconds": 161000000
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '9d606897-2874-4c47-82cb-07debf1941da',\n    type: 'ImportedPayment',\n    status: 'Unsuccessful',\n    amount: 501,\n    circlePaymentStatus: 'failed',\n    circlePaymentId: '5dae3db7-2902-4608-a32b-782b905148c7',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '97d16bcf-df1b-4814-865b-041be22e4d18'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '9d606897-2874-4c47-82cb-07debf1941da',\n    type: 'ImportedPayment',\n    status: 'Unsuccessful',\n    amount: 501,\n    circlePaymentStatus: 'failed',\n    circlePaymentId: '5dae3db7-2902-4608-a32b-782b905148c7',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '97d16bcf-df1b-4814-865b-041be22e4d18'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "userId": "skBkfQh8E1f4eOGBSVLaiuJ097v1",
      "type": "subscription",
      "proposalId": "eb19df17-92da-44a2-ae26-c1dd72fc0ec3",
      "updatedAt": {
        "_seconds": 1615958707,
        "_nanoseconds": 65000000
      },
      "createdAt": {
        "_seconds": 1615958706,
        "_nanoseconds": 312000000
      },
      "id": "9dc93f31-6c67-481f-988c-2449b8f2c18a",
      "source": {
        "id": "f3ed9074-797c-4f43-bc91-4ae4c56a1325",
        "type": "card"
      },
      "status": "confirmed",
      "commonId": "d30cb234-01ac-483c-b137-47961ed0cfec",
      "amount": {
        "amount": 700,
        "currency": "USD"
      },
      "subscriptionId": "cd05ab38-d2cc-4235-8ed7-1b903936ffc4",
      "fees": {
        "currency": "USD",
        "amount": 60
      },
      "circlePaymentId": "2fb44d95-e836-4a12-969a-138e6f7f0ea0"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '9dc93f31-6c67-481f-988c-2449b8f2c18a',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 700,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '2fb44d95-e836-4a12-969a-138e6f7f0ea0',\n    user: {\n      connect: {\n        id: 'skBkfQh8E1f4eOGBSVLaiuJ097v1'\n      }\n    },\n    card: {\n      connect: {\n        id: 'f3ed9074-797c-4f43-bc91-4ae4c56a1325'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '9dc93f31-6c67-481f-988c-2449b8f2c18a',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 700,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '2fb44d95-e836-4a12-969a-138e6f7f0ea0',\n    user: {\n      connect: {\n        id: 'skBkfQh8E1f4eOGBSVLaiuJ097v1'\n      }\n    },\n    card: {\n      connect: {\n        id: 'f3ed9074-797c-4f43-bc91-4ae4c56a1325'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "createdAt": {
        "_seconds": 1609147777,
        "_nanoseconds": 556000000
      },
      "subscriptionId": "76bf64d2-40b5-453b-919e-b7b6f0340797",
      "updatedAt": {
        "_seconds": 1609942812,
        "_nanoseconds": 361000000
      },
      "status": "paid",
      "fees": {
        "amount": 2155,
        "currency": "USD"
      },
      "amount": {
        "currency": "USD",
        "amount": 50000
      },
      "circlePaymentId": "b3e508de-cf31-44ce-8048-4a2c82e183fb",
      "id": "9ed156f5-2ccd-4393-b31e-5e4d2823fd66",
      "proposalId": "8b60d46d-31c2-4a6f-8946-504242577815",
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "type": "subscription",
      "source": {
        "id": "0eff7b34-fea4-497b-85b8-868c51b6eb9f",
        "type": "card"
      },
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ]
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '9ed156f5-2ccd-4393-b31e-5e4d2823fd66',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 50000,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: 'b3e508de-cf31-44ce-8048-4a2c82e183fb',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '0eff7b34-fea4-497b-85b8-868c51b6eb9f'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: '9ed156f5-2ccd-4393-b31e-5e4d2823fd66',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 50000,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: 'b3e508de-cf31-44ce-8048-4a2c82e183fb',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '0eff7b34-fea4-497b-85b8-868c51b6eb9f'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "amount": {
        "currency": "USD",
        "amount": 60000
      },
      "fees": {
        "currency": "USD",
        "amount": 0
      },
      "updatedAt": {
        "_seconds": 1612425346,
        "_nanoseconds": 406000000
      },
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "source": {
        "id": "e5ff0c5f-f33a-4f89-9846-8a59347ab115",
        "type": "card"
      },
      "status": "confirmed",
      "type": "subscription",
      "subscriptionId": "b4eee44c-8ddc-4f13-a76c-6cd7961d82a9",
      "createdAt": {
        "_seconds": 1612425346,
        "_nanoseconds": 6000000
      },
      "proposalId": "88766208-c258-48c7-9b01-f0a3f665982e",
      "circlePaymentId": "e5e3fd8e-3041-436b-b708-6510299c3725",
      "id": "a291e365-0196-461e-9847-7999b2df7435"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'a291e365-0196-461e-9847-7999b2df7435',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 60000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: 'e5e3fd8e-3041-436b-b708-6510299c3725',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'e5ff0c5f-f33a-4f89-9846-8a59347ab115'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'a291e365-0196-461e-9847-7999b2df7435',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 60000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: 'e5e3fd8e-3041-436b-b708-6510299c3725',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'e5ff0c5f-f33a-4f89-9846-8a59347ab115'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "id": "a4567dda-0d32-45dc-ba8c-df6e4a9060f0",
      "fees": {
        "currency": "USD",
        "amount": 1118
      },
      "circlePaymentId": "5e0c14fa-16d1-498d-bc5d-28ae2b020938",
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "type": "subscription",
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "updatedAt": {
        "_seconds": 1609942813,
        "_nanoseconds": 151000000
      },
      "source": {
        "id": "627a517e-4b23-487b-aef2-79ea3385e987",
        "type": "card"
      },
      "createdAt": {
        "_seconds": 1608127342,
        "_nanoseconds": 434000000
      },
      "amount": {
        "amount": 25600,
        "currency": "USD"
      },
      "proposalId": "e8ec8925-3275-4b0c-ad50-c0705fb192c7",
      "subscriptionId": "395abd6a-6a83-4488-9d1a-68d49919a939",
      "status": "confirmed"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'a4567dda-0d32-45dc-ba8c-df6e4a9060f0',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 25600,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '5e0c14fa-16d1-498d-bc5d-28ae2b020938',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '627a517e-4b23-487b-aef2-79ea3385e987'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'a4567dda-0d32-45dc-ba8c-df6e4a9060f0',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 25600,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '5e0c14fa-16d1-498d-bc5d-28ae2b020938',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '627a517e-4b23-487b-aef2-79ea3385e987'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "amount": {
        "currency": "USD",
        "amount": 501
      },
      "status": "failed",
      "id": "a50e2db6-e24f-4b5e-99e3-f86e6f60a43e",
      "type": "one-time",
      "updatedAt": {
        "_seconds": 1609942813,
        "_nanoseconds": 156000000
      },
      "source": {
        "type": "card",
        "id": "bca3559c-2f4b-4f89-853c-4e0425f88f6f"
      },
      "proposalId": "65cd97e2-13cb-4639-a349-a8a23e1ea016",
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "createdAt": {
        "_seconds": 1608193179,
        "_nanoseconds": 311000000
      },
      "failure": {
        "errorDescription": "Payment failed due to unspecified error",
        "errorCode": "payment_failed"
      },
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "circlePaymentId": "2b667821-5123-4533-8dbc-927af009ec7b"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'a50e2db6-e24f-4b5e-99e3-f86e6f60a43e',\n    type: 'ImportedPayment',\n    status: 'Unsuccessful',\n    amount: 501,\n    circlePaymentStatus: 'failed',\n    circlePaymentId: '2b667821-5123-4533-8dbc-927af009ec7b',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'bca3559c-2f4b-4f89-853c-4e0425f88f6f'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'a50e2db6-e24f-4b5e-99e3-f86e6f60a43e',\n    type: 'ImportedPayment',\n    status: 'Unsuccessful',\n    amount: 501,\n    circlePaymentStatus: 'failed',\n    circlePaymentId: '2b667821-5123-4533-8dbc-927af009ec7b',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'bca3559c-2f4b-4f89-853c-4e0425f88f6f'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "subscriptionId": "ec051bc0-0adc-4983-89da-bb411dfc2289",
      "refunds": [],
      "id": "a8c567a2-3819-44d1-b636-96df60e66cbe",
      "updateDate": "2020-12-09T20:12:33.369Z",
      "type": "SubscriptionPayment",
      "status": "pending",
      "amount": {
        "currency": "USD",
        "amount": "12500.00"
      },
      "createDate": "2020-12-09T20:12:33.369Z",
      "source": {
        "id": "daa181fc-5581-4d2a-bd0a-0b49894310ea",
        "type": "card"
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'a8c567a2-3819-44d1-b636-96df60e66cbe',\n    type: 'ImportedPayment',\n    status: 'Pending',\n    amount: 12500,\n    circlePaymentStatus: 'pending',\n?   circlePaymentId?: String | null,\n    user: {\n      connect: {\n?       id?: String,\n?       email?: String\n      },\n?     create?: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: {\n?       where: UserWhereUniqueInput,\n?       create: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput\n?     }\n    },\n    card: {\n      connect: {\n        id: 'daa181fc-5581-4d2a-bd0a-0b49894310ea'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument data.user.connect of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'a8c567a2-3819-44d1-b636-96df60e66cbe',\n    type: 'ImportedPayment',\n    status: 'Pending',\n    amount: 12500,\n    circlePaymentStatus: 'pending',\n?   circlePaymentId?: String | null,\n    user: {\n      connect: {\n?       id?: String,\n?       email?: String\n      },\n?     create?: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: {\n?       where: UserWhereUniqueInput,\n?       create: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput\n?     }\n    },\n    card: {\n      connect: {\n        id: 'daa181fc-5581-4d2a-bd0a-0b49894310ea'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument data.user.connect of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "source": {
        "type": "card",
        "id": "ebc19a40-2e32-401e-b7d5-d0027c6d8bd2"
      },
      "type": "one-time",
      "amount": {
        "currency": "USD",
        "amount": 3000
      },
      "createdAt": {
        "_seconds": 1610984104,
        "_nanoseconds": 717000000
      },
      "fees": {
        "currency": "USD",
        "amount": 0
      },
      "userId": "d3jPxOeMtnVqHTjJ5ILfuOHQQPQ2",
      "status": "confirmed",
      "circlePaymentId": "7936f8fc-411e-4a92-8d0e-61581350aec8",
      "id": "ae789e32-235f-428d-b4f1-b338cb4afa4d",
      "proposalId": "6ef0cdc4-9823-439d-a160-75501dba20a2",
      "updatedAt": {
        "_seconds": 1610984105,
        "_nanoseconds": 174000000
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'ae789e32-235f-428d-b4f1-b338cb4afa4d',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 3000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '7936f8fc-411e-4a92-8d0e-61581350aec8',\n    user: {\n      connect: {\n        id: 'd3jPxOeMtnVqHTjJ5ILfuOHQQPQ2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'ebc19a40-2e32-401e-b7d5-d0027c6d8bd2'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'ae789e32-235f-428d-b4f1-b338cb4afa4d',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 3000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '7936f8fc-411e-4a92-8d0e-61581350aec8',\n    user: {\n      connect: {\n        id: 'd3jPxOeMtnVqHTjJ5ILfuOHQQPQ2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'ebc19a40-2e32-401e-b7d5-d0027c6d8bd2'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "status": "confirmed",
      "createdAt": {
        "_seconds": 1610442275,
        "_nanoseconds": 848000000
      },
      "circlePaymentId": "fbebf640-7bf6-4d72-ad0a-901231b86425",
      "amount": {
        "currency": "USD",
        "amount": 125000
      },
      "id": "c5cd56fa-ea02-49ed-bfd8-936c3dcedaf0",
      "updatedAt": {
        "_seconds": 1610442276,
        "_nanoseconds": 348000000
      },
      "type": "one-time",
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "fees": {
        "currency": "USD",
        "amount": 5343
      },
      "source": {
        "type": "card",
        "id": "434966d9-4e13-4c7b-998f-d7e447cadfbb"
      },
      "proposalId": "0b186271-376c-46f7-9df2-4da887653863"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'c5cd56fa-ea02-49ed-bfd8-936c3dcedaf0',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 125000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: 'fbebf640-7bf6-4d72-ad0a-901231b86425',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '434966d9-4e13-4c7b-998f-d7e447cadfbb'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'c5cd56fa-ea02-49ed-bfd8-936c3dcedaf0',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 125000,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: 'fbebf640-7bf6-4d72-ad0a-901231b86425',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '434966d9-4e13-4c7b-998f-d7e447cadfbb'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "status": "confirmed",
      "type": "one-time",
      "proposalId": "4548189d-c519-4eb6-96c5-a909c73aaeb4",
      "amount": {
        "amount": 1250,
        "currency": "USD"
      },
      "circlePaymentId": "32edffa3-9691-4f6a-9773-2af184ce865d",
      "updatedAt": {
        "_seconds": 1610990066,
        "_nanoseconds": 967000000
      },
      "fees": {
        "currency": "USD",
        "amount": 0
      },
      "createdAt": {
        "_seconds": 1610990066,
        "_nanoseconds": 280000000
      },
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "source": {
        "id": "7ec73788-1c33-4e60-86be-e524d495610c",
        "type": "card"
      },
      "id": "c85b045e-1e31-43bc-aa8c-fc80c4e60218"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'c85b045e-1e31-43bc-aa8c-fc80c4e60218',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 1250,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '32edffa3-9691-4f6a-9773-2af184ce865d',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '7ec73788-1c33-4e60-86be-e524d495610c'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'c85b045e-1e31-43bc-aa8c-fc80c4e60218',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 1250,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '32edffa3-9691-4f6a-9773-2af184ce865d',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '7ec73788-1c33-4e60-86be-e524d495610c'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "proposalId": "0dcaddac-3908-47b5-8e88-06c5afbf254c",
      "createdAt": {
        "_seconds": 1609411035,
        "_nanoseconds": 422000000
      },
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "updatedAt": {
        "_seconds": 1609942813,
        "_nanoseconds": 149000000
      },
      "subscriptionId": "6b52e166-665b-44af-9fc5-bf097d58e254",
      "amount": {
        "amount": 37500,
        "currency": "USD"
      },
      "type": "subscription",
      "fees": {
        "currency": "USD",
        "amount": 1623.9999999999998
      },
      "id": "d675d42a-55f1-4964-88ce-0d66e663f159",
      "circlePaymentId": "1abcc1c0-4388-4b3f-845c-9df166e100f5",
      "status": "paid",
      "source": {
        "id": "9ade2732-2d2f-41d8-9267-2f80337bc304",
        "type": "card"
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'd675d42a-55f1-4964-88ce-0d66e663f159',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 37500,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: '1abcc1c0-4388-4b3f-845c-9df166e100f5',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '9ade2732-2d2f-41d8-9267-2f80337bc304'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'd675d42a-55f1-4964-88ce-0d66e663f159',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 37500,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: '1abcc1c0-4388-4b3f-845c-9df166e100f5',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '9ade2732-2d2f-41d8-9267-2f80337bc304'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "createdAt": {
        "_seconds": 1608557950,
        "_nanoseconds": 371000000
      },
      "source": {
        "type": "card",
        "id": "f8fdaba3-878c-498a-a97a-ab7a08d5b5c0"
      },
      "id": "dce6af32-89d8-43df-af1b-4a39225ed474",
      "subscriptionId": "e796747f-339e-44d2-b5c6-9784411178d1",
      "circlePaymentId": "57bd4735-5d31-42aa-bc38-52c0b900715d",
      "fees": {
        "currency": "USD",
        "amount": 252.99999999999997
      },
      "proposalId": "5b0fe9c9-c271-40a3-bd97-86324ee2561b",
      "status": "paid",
      "updatedAt": {
        "_seconds": 1609942812,
        "_nanoseconds": 570000000
      },
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "type": "subscription",
      "amount": {
        "currency": "USD",
        "amount": 5250
      }
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'dce6af32-89d8-43df-af1b-4a39225ed474',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 5250,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: '57bd4735-5d31-42aa-bc38-52c0b900715d',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'f8fdaba3-878c-498a-a97a-ab7a08d5b5c0'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'dce6af32-89d8-43df-af1b-4a39225ed474',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 5250,\n    circlePaymentStatus: 'paid',\n    circlePaymentId: '57bd4735-5d31-42aa-bc38-52c0b900715d',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'f8fdaba3-878c-498a-a97a-ab7a08d5b5c0'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "updatedAt": {
        "_seconds": 1621946169,
        "_nanoseconds": 684000000
      },
      "fees": {
        "currency": "USD",
        "amount": 103
      },
      "source": {
        "id": "d1dcc323-6652-4afd-b79b-aedc1bf53ee7",
        "type": "card"
      },
      "createdAt": {
        "_seconds": 1621946168,
        "_nanoseconds": 960000000
      },
      "type": "subscription",
      "subscriptionId": "1db8950b-53b5-44a2-8e9b-bb12505b929f",
      "id": "dd37a893-0246-439d-8eb4-505fbb648660",
      "circlePaymentId": "8dfc2713-d7fb-4736-b25e-74b69910509e",
      "commonId": "2a5bfc7d-9f50-4ff8-8c00-835e4b5f7b67",
      "amount": {
        "amount": 2500,
        "currency": "USD"
      },
      "status": "confirmed",
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "proposalId": "c8cecfe4-eba1-4fe9-a9cb-a5b99672ba63"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'dd37a893-0246-439d-8eb4-505fbb648660',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 2500,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '8dfc2713-d7fb-4736-b25e-74b69910509e',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'd1dcc323-6652-4afd-b79b-aedc1bf53ee7'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'dd37a893-0246-439d-8eb4-505fbb648660',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 2500,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '8dfc2713-d7fb-4736-b25e-74b69910509e',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'd1dcc323-6652-4afd-b79b-aedc1bf53ee7'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "id": "e4f728ed-09a9-4c6a-b320-d2e1e2b3412b",
      "type": "one-time",
      "source": {
        "type": "card",
        "id": "1c5507d7-d7a7-4df3-98a3-0adb684b9c8b"
      },
      "amount": {
        "currency": "USD",
        "amount": 2500
      },
      "fees": {
        "amount": 103,
        "currency": "USD"
      },
      "createdAt": {
        "_seconds": 1621947893,
        "_nanoseconds": 993000000
      },
      "proposalId": "9c759ac6-4c91-4629-ad24-999325a810ff",
      "commonId": "0f932979-eb1f-47d2-a6ac-7ba63a60019a",
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "updatedAt": {
        "_seconds": 1621947894,
        "_nanoseconds": 810000000
      },
      "status": "confirmed",
      "circlePaymentId": "7278d3d4-8e1b-49b9-bd4e-5d6566ad82d2"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'e4f728ed-09a9-4c6a-b320-d2e1e2b3412b',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 2500,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '7278d3d4-8e1b-49b9-bd4e-5d6566ad82d2',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '1c5507d7-d7a7-4df3-98a3-0adb684b9c8b'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'e4f728ed-09a9-4c6a-b320-d2e1e2b3412b',\n    type: 'ImportedPayment',\n    status: 'Successful',\n    amount: 2500,\n    circlePaymentStatus: 'confirmed',\n    circlePaymentId: '7278d3d4-8e1b-49b9-bd4e-5d6566ad82d2',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: '1c5507d7-d7a7-4df3-98a3-0adb684b9c8b'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "status": "pending",
      "id": "e9997bb7-0d3e-443b-8cc4-047dd2e8b3bc",
      "refunds": [],
      "type": "SubscriptionPayment",
      "updateDate": "2020-12-10T07:55:55.881Z",
      "source": {
        "type": "card",
        "id": "03ec81b7-d29e-410c-a0d6-ce516a9a4cc7"
      },
      "createDate": "2020-12-10T07:55:55.881Z",
      "amount": {
        "amount": "50000.00",
        "currency": "USD"
      },
      "subscriptionId": "3c2dd6b4-8ea0-4ec1-b3c0-8c8a67cfd32f"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'e9997bb7-0d3e-443b-8cc4-047dd2e8b3bc',\n    type: 'ImportedPayment',\n    status: 'Pending',\n    amount: 50000,\n    circlePaymentStatus: 'pending',\n?   circlePaymentId?: String | null,\n    user: {\n      connect: {\n?       id?: String,\n?       email?: String\n      },\n?     create?: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: {\n?       where: UserWhereUniqueInput,\n?       create: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput\n?     }\n    },\n    card: {\n      connect: {\n        id: '03ec81b7-d29e-410c-a0d6-ce516a9a4cc7'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument data.user.connect of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'e9997bb7-0d3e-443b-8cc4-047dd2e8b3bc',\n    type: 'ImportedPayment',\n    status: 'Pending',\n    amount: 50000,\n    circlePaymentStatus: 'pending',\n?   circlePaymentId?: String | null,\n    user: {\n      connect: {\n?       id?: String,\n?       email?: String\n      },\n?     create?: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: {\n?       where: UserWhereUniqueInput,\n?       create: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput\n?     }\n    },\n    card: {\n      connect: {\n        id: '03ec81b7-d29e-410c-a0d6-ce516a9a4cc7'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument data.user.connect of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "circlePaymentId": "0e9e6b7d-b3e5-4906-a472-15d664bb3ecb",
      "amount": {
        "currency": "USD",
        "amount": 504
      },
      "id": "f2363bd5-9a52-411f-a20c-6ce665b2d6e6",
      "type": "subscription",
      "trackIds": [
        "e1124322-cf28-43ad-b869-5c91471c5624",
        "a893ea3e-d5b4-4863-bc1f-0df32fff4623"
      ],
      "proposalId": "Payment for deleted subscription",
      "updatedAt": {
        "_seconds": 1609942812,
        "_nanoseconds": 463000000
      },
      "status": "failed",
      "userId": "Xh4xoIGHhgOhxz1S5AJkaXCBT8K2",
      "createdAt": {
        "_seconds": 1607873503,
        "_nanoseconds": 882000000
      },
      "source": {
        "id": "c1780060-74f1-4a7c-b32c-d421580cd176",
        "type": "card"
      },
      "failure": {
        "errorDescription": "Contact card issuer to query why payment failed",
        "errorCode": "card_not_honored"
      },
      "subscriptionId": "Payment for deleted subscription"
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'f2363bd5-9a52-411f-a20c-6ce665b2d6e6',\n    type: 'ImportedPayment',\n    status: 'Unsuccessful',\n    amount: 504,\n    circlePaymentStatus: 'failed',\n    circlePaymentId: '0e9e6b7d-b3e5-4906-a472-15d664bb3ecb',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'c1780060-74f1-4a7c-b32c-d421580cd176'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'f2363bd5-9a52-411f-a20c-6ce665b2d6e6',\n    type: 'ImportedPayment',\n    status: 'Unsuccessful',\n    amount: 504,\n    circlePaymentStatus: 'failed',\n    circlePaymentId: '0e9e6b7d-b3e5-4906-a472-15d664bb3ecb',\n    user: {\n      connect: {\n        id: 'Xh4xoIGHhgOhxz1S5AJkaXCBT8K2'\n      }\n    },\n    card: {\n      connect: {\n        id: 'c1780060-74f1-4a7c-b32c-d421580cd176'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  },
  {
    "payment": {
      "status": "pending",
      "subscriptionId": "f498688c-1835-466b-a7e2-3c2a0e8a595e",
      "id": "f9f767e7-4516-49bc-8257-32c6c2af42b6",
      "amount": {
        "currency": "USD",
        "amount": "50000.00"
      },
      "updateDate": "2020-12-10T07:55:55.850Z",
      "createDate": "2020-12-10T07:55:55.850Z",
      "type": "SubscriptionPayment",
      "source": {
        "type": "card",
        "id": "03ec81b7-d29e-410c-a0d6-ce516a9a4cc7"
      },
      "refunds": []
    },
    "error": {
      "message": "\nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'f9f767e7-4516-49bc-8257-32c6c2af42b6',\n    type: 'ImportedPayment',\n    status: 'Pending',\n    amount: 50000,\n    circlePaymentStatus: 'pending',\n?   circlePaymentId?: String | null,\n    user: {\n      connect: {\n?       id?: String,\n?       email?: String\n      },\n?     create?: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: {\n?       where: UserWhereUniqueInput,\n?       create: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput\n?     }\n    },\n    card: {\n      connect: {\n        id: '03ec81b7-d29e-410c-a0d6-ce516a9a4cc7'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument data.user.connect of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n",
      "stack": "Error: \nInvalid `prisma.payment.create()` invocation:\n\n{\n  data: {\n    id: 'f9f767e7-4516-49bc-8257-32c6c2af42b6',\n    type: 'ImportedPayment',\n    status: 'Pending',\n    amount: 50000,\n    circlePaymentStatus: 'pending',\n?   circlePaymentId?: String | null,\n    user: {\n      connect: {\n?       id?: String,\n?       email?: String\n      },\n?     create?: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: {\n?       where: UserWhereUniqueInput,\n?       create: UserCreateWithoutPaymentsInput | UserUncheckedCreateWithoutPaymentsInput\n?     }\n    },\n    card: {\n      connect: {\n        id: '03ec81b7-d29e-410c-a0d6-ce516a9a4cc7'\n      }\n    },\n+   common: {\n+     create?: CommonCreateWithoutPaymentsInput | CommonUncheckedCreateWithoutPaymentsInput,\n+     connectOrCreate?: CommonCreateOrConnectWithoutPaymentsInput,\n+     connect?: CommonWhereUniqueInput\n+   },\n+   join: {\n+     create?: JoinProposalCreateWithoutPaymentInput | JoinProposalUncheckedCreateWithoutPaymentInput,\n+     connectOrCreate?: JoinProposalCreateOrConnectWithoutPaymentInput,\n+     connect?: JoinProposalWhereUniqueInput\n+   },\n?   createdAt?: DateTime,\n?   updatedAt?: DateTime,\n?   processed?: Boolean,\n?   processedError?: Boolean,\n?   fees?: Int | null,\n?   subscription?: {\n?     create?: SubscriptionCreateWithoutPaymentsInput | SubscriptionUncheckedCreateWithoutPaymentsInput,\n?     connectOrCreate?: SubscriptionCreateOrConnectWithoutPaymentsInput,\n?     connect?: SubscriptionWhereUniqueInput\n?   }\n  }\n}\n\nArgument data.user.connect of type UserWhereUniqueInput needs at least one argument. Available args are listed in green.\nArgument common for data.common is missing.\nArgument join for data.join is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n\n    at Document.validate (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:32780:19)\n    at NewPrismaClient._executeRequest (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34717:17)\n    at /Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:52\n    at AsyncResource.runInAsyncScope (async_hooks.js:189:9)\n    at NewPrismaClient._request (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34652:25)\n    at Object.then (/Users/alexa/Projects/Common/node_modules/@prisma/client/runtime/index.js:34772:39)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
    }
  }
]