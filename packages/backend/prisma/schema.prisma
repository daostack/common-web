// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ---- User related stuff

model User {
  id     String @id @default(uuid())
  authId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstName String
  lastName  String

  email         String  @unique
  emailVerified Boolean @default(false)

  events      Event[]
  commonLinks CommonMember[]
}

// ---- Common related stuff

model Common {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  balance Int @default(0)
  raised  Int @default(0)

  whitlisted Boolean @default(false)

  fundingType          CommonFundingType
  fundingCooldown      DateTime
  fundingMinimumAmount Int

  events  Event[]
  members CommonMember[]
}

model CommonMember {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  common Common @relation(fields: [commonId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  roles CommonMemberRole[]

  commonId String
  userId   String
}

enum CommonMemberRole {
  Founder
}

enum CommonFundingType {
  OneTime
  Monthly
}

// ---- Events

model Event {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type EventType

  payload Json?

  commonId String?
  userId String?

  common Common? @relation(fields: [commonId], references: [id])
  user   User?   @relation(fields: [userId], references: [id])
}

enum EventType {
  CommonCreated

  CommonMemberCreated
  CommonMemberRoleAdded
  CommonMemberRoleRemoved

  UserCreated
}
